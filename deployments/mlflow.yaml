apiVersion: v1
kind: Namespace
metadata:
  name: ml-workflow
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mlflow-server
  namespace: ml-workflow
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mlflow-server
  template:
    metadata:
      labels:
        app: mlflow-server
    spec:
      initContainers:
      - name: wait-for-minio
        image: curlimages/curl:latest
        command: ['sh', '-c', 'until curl -f http://minio.ml-workflow.svc.cluster.local:9000/minio/health/ready; do echo waiting for minio; sleep 2; done;']
      containers:
      - name: mlflow-server
        image: python:3.9-slim
        command: ["/bin/bash"]
        args:
        - -c
        - |
          pip install mlflow boto3
          mlflow server \
            --host 0.0.0.0 \
            --port 5000
        env:
        - name: MINIO_ENDPOINT
          valueFrom:
            configMapKeyRef:
              name: ml-config
              key: MINIO_ENDPOINT
        - name: MINIO_ACCESS_KEY
          valueFrom:
            configMapKeyRef:
              name: ml-config
              key: MINIO_ACCESS_KEY
        - name: MINIO_SECRET_KEY
          valueFrom:
            configMapKeyRef:
              name: ml-config
              key: MINIO_SECRET_KEY
        - name: MLFLOW_S3_IGNORE_TLS
          valueFrom:
            configMapKeyRef:
              name: ml-config
              key: MLFLOW_S3_IGNORE_TLS
        ports:
        - containerPort: 5000
        readinessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 60
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 90
          periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: mlflow-service
  namespace: ml-workflow
spec:
  selector:
    app: mlflow-server
  ports:
  - port: 5000
    targetPort: 5000
    nodePort: 30500
  type: NodePort